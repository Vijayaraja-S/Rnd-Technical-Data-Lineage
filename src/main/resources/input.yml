sqlQuery:
  WITH
  cte1 AS (
  SELECT
  t1.COLUMN_1,
  t1.COLUMN_2,
  t1.COLUMN_3
  FROM application1.schema1_table_1 t1
  WHERE t1.COLUMN_1 = 10
  ),

  cte2 AS (
  WITH
  cte2_sub AS (
  SELECT
  t2.COLUMN_1,
  UPPER(TRIM(t2.COLUMN_4)) AS transformed_column_4,
  COALESCE(t2.COLUMN_5, 0) AS coalesced_column_5
  FROM application1.schema1_table_2 t2
  WHERE t2.COLUMN_7 BETWEEN '2023-01-01' AND '2023-12-31'
  AND t2.COLUMN_6 IS NOT NULL
  )
  SELECT
  t1.COLUMN_1,
  t1.COLUMN_2,
  t2_sub.transformed_column_4,
  t2_sub.coalesced_column_5
  FROM cte1 t1
  JOIN cte2_sub t2_sub
  ON t1.COLUMN_3 = t2_sub.COLUMN_1
  ),

  cte3 AS (
  WITH
  cte3_sub AS (
  SELECT
  t3.COLUMN_4,
  COUNT(t3.COLUMN_5) AS count_column_5,
  SUM(COALESCE(t3.COLUMN_6, 0)) AS sum_column_6
  FROM application1.schema1_table_3 t3
  GROUP BY t3.COLUMN_4
  HAVING COUNT(t3.COLUMN_5) > 2
  )
  SELECT
  t2.COLUMN_1,
  t2.COLUMN_2,
  t2.transformed_column_4,
  t3_sub.count_column_5,
  t3_sub.sum_column_6,
  CASE
  WHEN t3_sub.sum_column_6 > 100 THEN 'High'
  WHEN t3_sub.sum_column_6 BETWEEN 50 AND 100 THEN 'Medium'
  ELSE 'Low'
  END AS sum_category
  FROM cte2 t2
  LEFT JOIN cte3_sub t3_sub
  ON t2.transformed_column_4 = t3_sub.COLUMN_4
  ),

  cte4 AS (
  WITH
  cte4_sub AS (
  SELECT
  t4.COLUMN_1,
  AVG(t4.COLUMN_5) AS avg_column_5,
  MAX(t4.COLUMN_6) AS max_column_6,
  LOWER(TRIM(t4.COLUMN_7)) AS cleaned_column_7
  FROM application1.schema1_table_4 t4
  GROUP BY t4.COLUMN_1
  )
  SELECT
  t3.COLUMN_1,
  t3.COLUMN_2,
  t3.transformed_column_4,
  t3.count_column_5,
  t3.sum_column_6,
  t3.sum_category,
  t4_sub.avg_column_5,
  t4_sub.max_column_6,
  CASE
  WHEN LENGTH(t4_sub.cleaned_column_7) > 10 THEN 'Long'
  ELSE 'Short'
  END AS column_length_category
  FROM cte3 t3
  LEFT JOIN cte4_sub t4_sub
  ON t3.COLUMN_1 = t4_sub.COLUMN_1
  ),

  cte5 AS (
  WITH
  cte5_sub AS (
  SELECT
  t5.COLUMN_1,
  t5.COLUMN_2,
  SUM(t5.COLUMN_8) AS total_sum_column_8
  FROM application1.schema1_table_5 t5
  WHERE t5.COLUMN_8 IS NOT NULL
  GROUP BY t5.COLUMN_1, t5.COLUMN_2
  )
  SELECT
  t4.COLUMN_1,
  t4.COLUMN_2,
  t4.transformed_column_4,
  t4.count_column_5,
  t4.sum_column_6,
  t4.sum_category,
  t4.avg_column_5,
  t4.max_column_6,
  t4.column_length_category,
  t5_sub.total_sum_column_8
  FROM cte4 t4
  LEFT JOIN cte5_sub t5_sub
  ON t4.COLUMN_1 = t5_sub.COLUMN_1
  AND t4.COLUMN_2 = t5_sub.COLUMN_2
  ),

  cte6 AS (
  WITH
  cte6_sub AS (
  SELECT
  t6.COLUMN_1,
  t6.COLUMN_2,
  SUM(t6.COLUMN_9) AS total_sum_column_9
  FROM application1.schema1_table_6 t6
  WHERE t6.COLUMN_9 > 0
  GROUP BY t6.COLUMN_1, t6.COLUMN_2
  )
  SELECT
  t5.COLUMN_1,
  t5.COLUMN_2,
  t5.transformed_column_4,
  t5.count_column_5,
  t5.sum_column_6,
  t5.sum_category,
  t5.avg_column_5,
  t5.max_column_6,
  t5.column_length_category,
  t5.total_sum_column_8,
  t6_sub.total_sum_column_9,
  ROUND(t5.total_sum_column_8 / NULLIF(t6_sub.total_sum_column_9, 0), 2) AS ratio
  FROM cte5 t5
  LEFT JOIN cte6_sub t6_sub
  ON t5.COLUMN_1 = t6_sub.COLUMN_1
  AND t5.COLUMN_2 = t6_sub.COLUMN_2
  )

  SELECT
  t6.COLUMN_1,
  t6.COLUMN_2,
  t6.transformed_column_4,
  t6.count_column_5,
  t6.sum_column_6,
  t6.sum_category,
  t6.avg_column_5,
  t6.max_column_6,
  t6.column_length_category,
  t6.total_sum_column_8,
  t6.total_sum_column_9,
  t6.ratio
  FROM cte6 t6
  JOIN application1.schema1_table_7 t7
  ON t6.COLUMN_1 = t7.COLUMN_1
  AND t6.COLUMN_2 = t7.COLUMN_2
  WHERE t7.COLUMN_10 IS NOT NULL
  ORDER BY t6.COLUMN_1 ASC, t6.ratio DESC
  OFFSET 10
  LIMIT 20

