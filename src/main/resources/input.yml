sqlQuery: WITH
  cte_level1 AS (
  WITH cte_sub1 AS (
  SELECT
  t1.column1,
  t1.column2,
  ROW_NUMBER() OVER (PARTITION BY t1.column1 ORDER BY t1.column3) AS row_num,
  SUM(t1.column4) OVER (PARTITION BY t1.column1) AS sum_column4,
  (SELECT MAX(t15.column10) FROM app2_schema3.table15 t15 WHERE t15.column1 = t1.column1) AS max_column10
  FROM app1_schema1.table1 t1
  JOIN app2_schema5.table8 t8 ON t1.column2 = t8.column6
  WHERE t1.column5 IS NOT NULL
  )
  SELECT
  sub1.column1,
  sub1.column2,
  sub1.row_num,
  sub1.sum_column4,
  sub1.max_column10
  FROM cte_sub1 sub1
  WHERE EXISTS (
  SELECT 1
  FROM app3_schema7.table4 t4
  WHERE t4.column2 = sub1.column1
  AND t4.column10 IN (
  SELECT DISTINCT column10
  FROM app4_schema10.table7 t7
  WHERE t7.column5 = sub1.column1
  )
  )
  ),

  cte_level2 AS (
  WITH cte_sub2 AS (
  SELECT
  t3.id,
  t3.parent_id,
  t3.value AS base_value,
  ROW_NUMBER() OVER (PARTITION BY t3.parent_id ORDER BY t3.id) AS depth,
  (SELECT COUNT(*) FROM app3_schema5.table10 t10 WHERE t10.column4 = t3.column4) AS related_count
  FROM app2_schema2.table3 t3
  LEFT JOIN app3_schema6.table5 t5 ON t3.parent_id = t5.id
  WHERE t3.parent_id IS NULL
  )
  SELECT
  sub2.id,
  sub2.parent_id,
  sub2.base_value,
  sub2.depth,
  sub2.related_count
  FROM cte_sub2 sub2

  UNION ALL

  SELECT
  t3.id,
  t3.parent_id,
  t3.value,
  level2.depth + 1 AS depth,
  (SELECT COUNT(*) FROM app3_schema8.table7 t7 WHERE t7.column1 = level2.parent_id) AS related_count
  FROM app2_schema2.table3 t3
  JOIN cte_level2 level2 ON t3.parent_id = level2.id
  WHERE t3.parent_id IS NOT NULL
  ),

  cte_level3 AS (
  WITH cte_sub3 AS (
  SELECT
  t2.column1,
  MAX(t2.column6) AS max_column6,
  ROW_NUMBER() OVER (PARTITION BY t2.column1 ORDER BY t2.column3) AS row_num3,
  (SELECT AVG(t12.column9) FROM app1_schema9.table12 t12 WHERE t12.column1 = t2.column1) AS avg_column9
  FROM app3_schema4.table2 t2
  WHERE t2.column5 IN (
  SELECT column5
  FROM app4_schema3.table14 t14
  WHERE t14.column10 = t2.column1
  )
  GROUP BY t2.column1
  )
  SELECT
  sub3.column1,
  sub3.max_column6,
  sub3.row_num3,
  sub3.avg_column9
  FROM cte_sub3 sub3
  ),

  cte_level4 AS (
  WITH cte_sub4 AS (
  SELECT
  t3.column1,
  t3.column4,
  SUM(t3.column7) AS sum_column7,
  GROUPING(t3.column1) AS group_col1,
  GROUPING(t3.column4) AS group_col4,
  (SELECT SUM(column10) FROM app1_schema6.table9 t9 WHERE t9.column1 = t3.column1) AS total_column10
  FROM app4_schema8.table3 t3
  GROUP BY CUBE(t3.column1, t3.column4)
  HAVING SUM(t3.column7) > 200
  )
  SELECT
  sub4.column1,
  sub4.column4,
  sub4.sum_column7,
  sub4.group_col1,
  sub4.group_col4,
  sub4.total_column10
  FROM cte_sub4 sub4
  ),

  cte_level5 AS (
  WITH cte_sub5 AS (
  SELECT
  t6.column1,
  t6.column2,
  COUNT(*) OVER (PARTITION BY t6.column1) AS total_count,
  ROW_NUMBER() OVER (PARTITION BY t6.column1 ORDER BY t6.column2) AS depth,
  (SELECT COUNT(*) FROM app4_schema10.table11 t11 WHERE t11.column1 = t6.column1) AS related_count
  FROM app3_schema7.table6 t6
  JOIN app4_schema9.table4 t4 ON t6.column3 = t4.column1
  WHERE t6.column4 IS NOT NULL
  )
  SELECT
  sub5.column1,
  sub5.column2,
  sub5.total_count,
  sub5.depth,
  sub5.related_count
  FROM cte_sub5 sub5
  )

  SELECT
  cte1.column1 AS first_level,
  cte2.base_value AS second_level,
  cte3.max_column6 AS third_level,
  cte4.sum_column7 AS fourth_level,
  cte5.total_count AS fifth_level,
  CASE
  WHEN cte5.depth > 5 THEN 'Deep'
  ELSE 'Shallow'
  END AS depth_level
  FROM cte_level1 cte1
  JOIN cte_level2 cte2 ON cte1.column1 = cte2.id
  JOIN cte_level3 cte3 ON cte2.id = cte3.column1
  JOIN cte_level4 cte4 ON cte3.column1 = cte4.column1
  JOIN cte_level5 cte5 ON cte4.column1 = cte5.column1
  ORDER BY cte5.depth DESC, cte4.sum_column7 DESC
  LIMIT 100


sunburst: true
searchName: ADVANCE_SEARCH
searchId: src_01

#sqlQuery: SELECT
#  t1.COLUMN_1 AS C1,
#  t1.COLUMN_2 AS C2,
#  t2.COLUMN_4 AS additional_info,
#  t3.COLUMN_5 AS more_info
#
#  FROM
#  application1_schema1.table_1 t1
#
#  JOIN
#  application1_schema1.table_2 t2
#  ON t1.COLUMN_3 = t2.COLUMN_3
#
#  LEFT JOIN
#  application2_schema2.table_3 t3
#  ON t1.COLUMN_4 = t3.COLUMN_4
#
#  INNER JOIN
#  application1_schema1.table_4 t4
#  ON t2.COLUMN_5 = t4.COLUMN_5
#
#  WHERE
#  t1.column_1 = 10 AND
#  t1.column_4 = 20 AND
#  t1.column_6 = 20 AND
#  t1.column_7 = 20 AND
#  t1.column_7 = 20 AND
#  t1.column_8 = 20 AND
#  t1.column_9 = 20
#
#  AND t4.column_6 IS NOT NULL
#  AND t2.column_7 BETWEEN '2023-01-01' AND '2023-12-31'
#
#  GROUP BY
#  t1.COLUMN_1, t1.COLUMN_2, t2.COLUMN_4, t3.COLUMN_5
#
#  HAVING
#  COUNT(*) > 2
#
#  ORDER BY
#  t1.COLUMN_1 ASC, t2.COLUMN_4 DESC
#
#  OFFSET 10
#  LIMIT 20
